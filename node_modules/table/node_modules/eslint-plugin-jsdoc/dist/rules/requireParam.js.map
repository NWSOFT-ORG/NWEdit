{"version":3,"sources":["../../src/rules/requireParam.js"],"names":["rootNamer","desiredRoots","currentIndex","name","idx","incremented","length","base","suffix","shift","jsdoc","utils","context","preferredTagName","getPreferredTagName","tagName","jsdocParameterNames","getJsdocTagsDeep","shallowJsdocParameterNames","filter","tag","includes","map","avoidDocs","hasTag","autoIncrementBase","checkRestProperty","checkDestructured","checkDestructuredRoots","checkTypesPattern","enableFixer","enableRootFixer","enableRestElementFixer","unnamedRootBase","useDefaultObjectProperties","options","lastSlashPos","lastIndexOf","checkTypesRegex","RegExp","slice","missingTags","functionParameterNames","getFunctionParameterNames","flattenedRoots","flattenRoots","names","paramIndex","hasParamIndex","cur","_","has","dropPathSegmentQuotes","String","getParamIndex","setParamIndex","forEach","findExpectedIndex","jsdocTags","indexAtFunctionParams","remainingRoots","foundIndex","findIndex","newAdd","some","remainingRoot","Array","isArray","tags","tagLineCount","source","tokens","end","nextRootName","namer","functionParameterName","functionParameterIdx","inc","matchedJsdoc","rootName","type","search","hasRestElement","hasPropertyRest","rests","notCheckingNames","paramName","find","fpn","emptyParamIdx","push","remove","fullParamName","notCheckingName","paramType","comparePaths","undefined","startsWith","funcParamName","restElement","fix","createTokens","tagIndex","sourceIndex","spliceCount","number","delimiter","description","postDelimiter","postName","postTag","postType","start","splice","firstNumber","src","offset","expectedIdx","fixer","missingTag","reportJSDoc","contextDefaults","meta","docs","url","fixable","schema","additionalProperties","properties","default","checkConstructors","checkGetters","checkSetters","contexts","items","exemptedBy"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport iterateJsdoc from '../iterateJsdoc';\n\ntype T = [string, () => T];\nconst rootNamer = (desiredRoots: string[], currentIndex: number): T => {\n  let name;\n  let idx = currentIndex;\n  const incremented = desiredRoots.length <= 1;\n  if (incremented) {\n    const base = desiredRoots[0];\n    const suffix = idx++;\n    name = `${base}${suffix}`;\n  } else {\n    name = desiredRoots.shift();\n  }\n\n  return [name, incremented, () => {\n    return rootNamer(desiredRoots, idx);\n  }];\n};\n\nexport default iterateJsdoc(({\n  jsdoc,\n  utils,\n  context,\n}) => {\n  const preferredTagName = utils.getPreferredTagName({tagName: 'param'});\n  if (!preferredTagName) {\n    return;\n  }\n  const jsdocParameterNames = utils.getJsdocTagsDeep(preferredTagName);\n\n  const shallowJsdocParameterNames = jsdocParameterNames.filter((tag) => {\n    return !tag.name.includes('.');\n  }).map((tag, idx) => {\n    return {...tag,\n      idx};\n  });\n\n  if (utils.avoidDocs()) {\n    return;\n  }\n\n  // Param type is specified by type in @type\n  if (utils.hasTag('type')) {\n    return;\n  }\n\n  const {\n    autoIncrementBase = 0,\n    checkRestProperty = false,\n    checkDestructured = true,\n    checkDestructuredRoots = true,\n    checkTypesPattern = '/^(?:[oO]bject|[aA]rray|PlainObject|Generic(?:Object|Array))$/',\n    enableFixer = true,\n    enableRootFixer = true,\n    enableRestElementFixer = true,\n    unnamedRootBase = ['root'],\n    useDefaultObjectProperties = false,\n  } = context.options[0] || {};\n\n  const lastSlashPos = checkTypesPattern.lastIndexOf('/');\n  const checkTypesRegex = lastSlashPos === -1 ?\n    new RegExp(checkTypesPattern) :\n    new RegExp(checkTypesPattern.slice(1, lastSlashPos), checkTypesPattern.slice(lastSlashPos + 1));\n\n  const missingTags = [];\n  const functionParameterNames = utils.getFunctionParameterNames(useDefaultObjectProperties);\n  const flattenedRoots = utils.flattenRoots(functionParameterNames).names;\n\n  const paramIndex = {};\n  const hasParamIndex = (cur) => {\n    return _.has(paramIndex, utils.dropPathSegmentQuotes(String(cur)));\n  };\n  const getParamIndex = (cur) => {\n    return paramIndex[utils.dropPathSegmentQuotes(String(cur))];\n  };\n  const setParamIndex = (cur, idx) => {\n    paramIndex[utils.dropPathSegmentQuotes(String(cur))] = idx;\n  };\n  flattenedRoots.forEach((cur, idx) => {\n    setParamIndex(cur, idx);\n  });\n\n  const findExpectedIndex = (jsdocTags, indexAtFunctionParams) => {\n    const remainingRoots = functionParameterNames.slice(indexAtFunctionParams || 0);\n    const foundIndex = jsdocTags.findIndex(({name, newAdd}) => {\n      return !newAdd && remainingRoots.some((remainingRoot) => {\n        if (Array.isArray(remainingRoot)) {\n          return remainingRoot[1].names.includes(name);\n        }\n        if (typeof remainingRoot === 'object') {\n          return name === remainingRoot.name;\n        }\n\n        return name === remainingRoot;\n      });\n    });\n\n    const tags = foundIndex > -1 ?\n      jsdocTags.slice(0, foundIndex) :\n      jsdocTags.filter(({tag}) => {\n        return tag === preferredTagName;\n      });\n\n    let tagLineCount = 0;\n    tags.forEach(({source}) => {\n      source.forEach(({tokens: {end}}) => {\n        if (!end) {\n          tagLineCount++;\n        }\n      });\n    });\n\n    return tagLineCount;\n  };\n\n  let [nextRootName, incremented, namer] = rootNamer([...unnamedRootBase], autoIncrementBase);\n\n  functionParameterNames.forEach((functionParameterName, functionParameterIdx) => {\n    let inc;\n    if (Array.isArray(functionParameterName)) {\n      const matchedJsdoc = shallowJsdocParameterNames[functionParameterIdx] ||\n        jsdocParameterNames[functionParameterIdx];\n\n      let rootName;\n      if (functionParameterName[0]) {\n        rootName = functionParameterName[0];\n      } else if (matchedJsdoc && matchedJsdoc.name) {\n        rootName = matchedJsdoc.name;\n        if (matchedJsdoc.type && matchedJsdoc.type.search(checkTypesRegex) === -1) {\n          return;\n        }\n      } else {\n        rootName = nextRootName;\n        inc = incremented;\n        [nextRootName, incremented, namer] = namer();\n      }\n\n      const {hasRestElement, hasPropertyRest, rests, names} = functionParameterName[1];\n      const notCheckingNames = [];\n      if (!enableRestElementFixer && hasRestElement) {\n        return;\n      }\n\n      if (!checkDestructuredRoots) {\n        return;\n      }\n\n      names.forEach((paramName, idx) => {\n        // Add root if the root name is not in the docs (and is not already\n        //  in the tags to be fixed)\n        if (!jsdocParameterNames.find(({name}) => {\n          return name === rootName;\n        }) && !missingTags.find(({functionParameterName: fpn}) => {\n          return fpn === rootName;\n        })) {\n          const emptyParamIdx = jsdocParameterNames.findIndex(({name}) => {\n            return !name;\n          });\n\n          if (emptyParamIdx > -1) {\n            missingTags.push({\n              functionParameterIdx: emptyParamIdx,\n              functionParameterName: rootName,\n              inc,\n              remove: true,\n            });\n          } else {\n            missingTags.push({\n              functionParameterIdx: hasParamIndex(rootName) ?\n                getParamIndex(rootName) :\n                getParamIndex(paramName),\n              functionParameterName: rootName,\n              inc,\n            });\n          }\n        }\n\n        if (!checkDestructured) {\n          return;\n        }\n\n        if (!checkRestProperty && rests[idx]) {\n          return;\n        }\n\n        const fullParamName = `${rootName}.${paramName}`;\n\n        const notCheckingName = jsdocParameterNames.find(({name, type: paramType}) => {\n          return utils.comparePaths(name)(fullParamName) && paramType.search(checkTypesRegex) === -1 && paramType !== '';\n        });\n\n        if (notCheckingName !== undefined) {\n          notCheckingNames.push(notCheckingName.name);\n        }\n\n        if (notCheckingNames.find((name) => {\n          return fullParamName.startsWith(name);\n        })) {\n          return;\n        }\n\n        if (jsdocParameterNames && !jsdocParameterNames.find(({name}) => {\n          return utils.comparePaths(name)(fullParamName);\n        })) {\n          missingTags.push({\n            functionParameterIdx: getParamIndex(\n              functionParameterName[0] ? fullParamName : paramName,\n            ),\n            functionParameterName: fullParamName,\n            inc,\n            type: hasRestElement && !hasPropertyRest ? '{...any}' : undefined,\n          });\n        }\n      });\n\n      return;\n    }\n    let funcParamName;\n    let type;\n    if (typeof functionParameterName === 'object') {\n      if (!enableRestElementFixer && functionParameterName.restElement) {\n        return;\n      }\n      funcParamName = functionParameterName.name;\n      type = '{...any}';\n    } else {\n      funcParamName = functionParameterName;\n    }\n\n    if (jsdocParameterNames && !jsdocParameterNames.find(({name}) => {\n      return name === funcParamName;\n    })) {\n      missingTags.push({\n        functionParameterIdx: getParamIndex(funcParamName),\n        functionParameterName: funcParamName,\n        inc,\n        type,\n      });\n    }\n  });\n\n  const fix = ({\n    functionParameterIdx, functionParameterName, remove, inc, type,\n  }) => {\n    if (inc && !enableRootFixer) {\n      return;\n    }\n    const createTokens = (tagIndex, sourceIndex, spliceCount) => {\n      // console.log(sourceIndex, tagIndex, jsdoc.tags, jsdoc.source);\n      const tokens = {\n        number: sourceIndex + 1,\n        tokens: {\n          delimiter: '*',\n          description: '',\n          end: '',\n          name: functionParameterName,\n          newAdd: true,\n          postDelimiter: ' ',\n          postName: '',\n          postTag: ' ',\n          postType: type ? ' ' : '',\n          start: jsdoc.source[sourceIndex].tokens.start,\n          tag: `@${preferredTagName}`,\n          type: type ?? '',\n        },\n      };\n      jsdoc.tags.splice(tagIndex, spliceCount, {\n        name: functionParameterName,\n        newAdd: true,\n        source: [tokens],\n        tag: preferredTagName,\n        type: type ?? '',\n      });\n      const firstNumber = jsdoc.source[0].number;\n      jsdoc.source.splice(sourceIndex, spliceCount, tokens);\n      jsdoc.source.slice(sourceIndex).forEach((src, idx) => {\n        src.number = firstNumber + sourceIndex + idx;\n      });\n    };\n    const offset = jsdoc.source.findIndex(({tokens: {tag, end}}) => {\n      return tag || end;\n    });\n    if (remove) {\n      createTokens(functionParameterIdx, offset + functionParameterIdx, 1);\n    } else {\n      const expectedIdx = findExpectedIndex(jsdoc.tags, functionParameterIdx);\n      createTokens(expectedIdx, offset + expectedIdx, 0);\n    }\n  };\n\n  const fixer = () => {\n    missingTags.forEach((missingTag) => {\n      fix(missingTag);\n    });\n  };\n\n  missingTags.forEach(({functionParameterName}) => {\n    utils.reportJSDoc(\n      `Missing JSDoc @${preferredTagName} \"${functionParameterName}\" declaration.`,\n      null,\n      enableFixer ? fixer : null,\n    );\n  });\n}, {\n  contextDefaults: true,\n  meta: {\n    docs: {\n      description: 'Requires that all function parameters are documented.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-require-param',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          autoIncrementBase: {\n            default: 0,\n            type: 'integer',\n          },\n          checkConstructors: {\n            default: true,\n            type: 'boolean',\n          },\n          checkDestructured: {\n            default: true,\n            type: 'boolean',\n          },\n          checkDestructuredRoots: {\n            default: true,\n            type: 'boolean',\n          },\n          checkGetters: {\n            default: false,\n            type: 'boolean',\n          },\n          checkRestProperty: {\n            default: false,\n            type: 'boolean',\n          },\n          checkSetters: {\n            default: false,\n            type: 'boolean',\n          },\n          checkTypesPattern: {\n            type: 'string',\n          },\n          contexts: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          enableFixer: {\n            type: 'boolean',\n          },\n          enableRestElementFixer: {\n            type: 'boolean',\n          },\n          enableRootFixer: {\n            type: 'boolean',\n          },\n          exemptedBy: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          unnamedRootBase: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          useDefaultObjectProperties: {\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"file":"requireParam.js"}